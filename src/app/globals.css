@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-rgb: 0, 0, 0;
  --background-start-rgb: 214, 219, 220;
  --background-end-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-start-rgb: 0, 0, 0;
    --background-end-rgb: 0, 0, 0;
  }
}

/* body {
  color: rgb(var(--foreground-rgb));
  background: linear-gradient(
      to bottom,
      transparent,
      rgb(var(--background-end-rgb))
    )
    rgb(var(--background-start-rgb));
} */

.container{
  background-color:skyblue;
  padding: 5px;
  display: grid;

  /* grid-template-rows: 100px 100px; */
  /* fr is a unit, a fractional value of the 
  available space
  this makes each col take up equal space */
  /* grid-template-columns: 1fr 1fr 1fr; */
  /* now the second col is twice as large as the other two */
  /* grid-template-columns: 1fr 2fr 1fr; */
  /* you can mix and match values */
  /* grid-template-columns: 100px 3fr 1fr; */

  /* you can set min and max sizes, which will stop the box from growing
  & shrinking along with the screen*/
  grid-template-columns: 100px minmax(100px, 3fr) 1fr;

  /* repeat(a,b) produces a number of bs */
  grid-template-rows: repeat(2, 100px);

  /* one value adds gaps equally to rows & cols
  two vals, first is rows, second is cols */
  grid-gap: 1em 3em;
}

.item {
  background-color: lightpink;
  margin: 10px;
  border-color: black;
  border-width: 4px;
}

